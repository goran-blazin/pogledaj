// prisma/schema.prisma

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ENUMS

enum Gender {
  Male
  Female
  Other
}

enum ActorRoleType {
  Main
  Supporting
  Extra
  Cameo
}

enum DirectorType {
  Main
  Assistant
}

enum ProducerType {
  Executive
  Assistant
}

enum ProjectionType {
  Movie
  TheaterPlay
}

// TABLES

model Genre {
  systemName    String @id
  localizedName String @unique
}

model Language {
  code String @id
  name String @unique
}

model Country {
  code String @id
  name String @unique
}

model City {
  id          String @id @default(uuid()) @db.Uuid
  cityCode    String
  name        String
  postalCode  String
  countryCode String

  @@unique([cityCode, countryCode])
}

model Cinema {
  id           String @id @default(uuid()) @db.Uuid
  name         String @unique
  description  String
  cityId       String @db.Uuid
  address      String
  rating       Int
  phone        Json   @default("[]")
  posterImages Json   @default("[]")
}

model CinemaTheater {
  id           String  @id @default(uuid()) @db.Uuid
  name         String
  cinemaId     String  @db.Uuid
  supports3D   Boolean @default(false)
  posterImages Json    @default("[]")
}

model CinemaSeatGroup {
  id          String @id @default(uuid()) @db.Uuid
  theaterId   String @db.Uuid
  name        String
  rowCount    Int
  columnCount Int
}

model CinemaSeat {
  id          String @id @default(uuid()) @db.Uuid
  seatGroupId String @db.Uuid
  seatRow     String
  seatColumn  String
  options     Json   @default("{}")
}

model Movie {
  id                 String   @id @default(uuid()) @db.Uuid
  originalName       String
  localizedName      String
  plot               String
  genreIds           Json
  runtimeMinutes     Int
  originalLanguageId String
  dubbedLanguageId   String?
  countryOfOriginId  String
  posterImages       Json     @default("[]")
  rating             Int
  releaseDate        DateTime @db.Date
  createdAt          DateTime @default(now())
  updatedAt          DateTime
}

model Person {
  id                String    @id @default(uuid()) @db.Uuid
  countryOfOriginId String
  firstName         String
  middleName        String?
  lastName          String
  dateOfBirth       DateTime? @db.Date
  gender            Gender
  createdAt         DateTime  @default(now())
  updatedAt         DateTime
}

model Actor {
  personId       String         @db.Uuid
  projectionId   String         @db.Uuid
  projectionType ProjectionType
  role           ActorRoleType

  @@id([personId, projectionId])
}

model Director {
  personId       String         @db.Uuid
  projectionId   String         @db.Uuid
  projectionType ProjectionType
  type           DirectorType

  @@id([personId, projectionId])
}

model Producer {
  personId       String         @db.Uuid
  projectionId   String         @db.Uuid
  projectionType ProjectionType
  type           ProducerType

  @@id([personId, projectionId])
}
